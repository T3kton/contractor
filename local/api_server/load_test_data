#!/usr/bin/env python3
import os
import sys

sys.path.insert( 1, '../..' )

os.environ.setdefault( 'DJANGO_SETTINGS_MODULE', 'contractor.settings' )

import django
django.setup()

from contractor.BluePrint.models import FoundationBluePrint, StructureBluePrint
from contractor.Site.models import Site
from contractor.Building.models import Structure, FoundationNetworkInterface
from contractor.Utilities.models import RealNetworkInterface, AddressBlock, Address, ReservedAddress, DynamicAddress
from contractor_plugins.VirtualBox.models import VirtualBoxFoundation
from contractor_plugins.Manual.models import ManualFoundation

fbp_manual = FoundationBluePrint.objects.get( pk='generic-manual' )
fbp_vm = FoundationBluePrint.objects.get( pk='generic-virtualbox' )
sbp_xenial = StructureBluePrint.objects.get( pk='generic-xenial' )

print( 'creating sites...' )
s1 = Site( name='site1', description='Test Site 1' )
s1.config_values[ 'domain_name' ] = 'site1.local'
s1.config_values[ 'dns_servers' ] = [ '127.0.0.1' ]
s1.config_values[ 'dns_search' ] = [ 'site1.local', 'local' ]
s1.full_clean()
s1.save()

s2 = Site( name='site2', description='Test Site 2' )
s2.config_values[ 'domain_name' ] = 's2.site1.local'
s2.config_values[ '{dns_search' ] = [ 's2.site1.local' ]
s2.config_values[ 'dns_servers' ] = [ '10.0.0.1' ]
s2.parent = s1
s2.full_clean()
s2.save()

addr1_block = AddressBlock( site=s1, subnet='192.168.200.0', gateway_offset=1, prefix=24 )
addr1_block.full_clean()
addr1_block.save()

addr2_block = AddressBlock( site=s2, subnet='169.254.0.0', gateway_offset=1, prefix=24 )
addr2_block.full_clean()
addr2_block.save()

for i in range( 2, 10 ):
  addr = ReservedAddress( address_block=addr1_block, offset=i, reason='switch reserved' )
  addr.full_clean()
  addr.save()

addr = ReservedAddress( address_block=addr1_block, offset=10, reason='resource server' )
addr.full_clean()
addr.save()

for i in range( 220, 225 ):
  addr = DynamicAddress( address_block=addr1_block, offset=i )
  addr.full_clean()
  addr.save()

print( 'creating foundations...' )
fdn_vm1 = VirtualBoxFoundation( site=s1, blueprint=fbp_vm, locator='testvm1-vb' )
fdn_vm1.config_values = { 'memory_size': 1024 }
fdn_vm1.full_clean()
fdn_vm1.save()

fdn_manual1 = ManualFoundation( site=s1, blueprint=fbp_manual, locator='oldserver1' )
fdn_manual1.full_clean()
fdn_manual1.save()

print( 'creating structures...' )
str_vm1 = Structure( site=s1, blueprint=sbp_xenial, hostname='testvm1' )
str_vm1.foundation = fdn_vm1
str_vm1.auto_build = True
str_vm1.full_clean()
str_vm1.save()

iface = RealNetworkInterface( name='eth0' )
iface.full_clean()
iface.save()

fni = FoundationNetworkInterface( foundation=fdn_vm1, interface=iface, physical_location='eth0' )
fni.full_clean()
fni.save()

addr = Address( networked=str_vm1, address_block=addr1_block, interface_name='eth0', offset=101, is_primary=True, is_provisioning=True )
addr.full_clean()
addr.save()

str_manual1 = Structure( site=s1, blueprint=sbp_xenial, hostname='testmanual1' )
str_manual1.foundation = fdn_manual1
str_manual1.full_clean()
str_manual1.save()
