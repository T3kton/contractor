#!/usr/bin/env python3
import os

os.environ.setdefault( 'DJANGO_SETTINGS_MODULE', 'contractor.settings' )

import django
django.setup()

from contractor.BluePrint.models import FoundationBluePrint, StructureBluePrint
from contractor.Site.models import Site
from contractor.Building.models import Structure, FoundationNetworkInterface, ComplexStructure, Dependancy
from contractor.Utilities.models import RealNetworkInterface, AddressBlock, Address, ReservedAddress, DynamicAddress
from contractor_plugins.Manual.models import ManualFoundation, ManualComplex, ManualComplexedFoundation

fbp_manual = FoundationBluePrint.objects.get( pk='generic-manual' )
sbp_xenial = StructureBluePrint.objects.get( pk='generic-xenial' )
sbp_manual = StructureBluePrint.objects.get( pk='generic-manual-structure' )

print( 'creating sites...' )
s1 = Site( name='site1', description='Test Site 1' )
s1.config_values[ 'domain_name' ] = 'site1.local'
s1.config_values[ 'dns_servers' ] = [ '127.0.0.1' ]
s1.config_values[ 'dns_search' ] = [ 'site1.local', 'local' ]
s1.full_clean()
s1.save()

s2 = Site( name='site2', description='Test Site 2' )
s2.config_values[ 'domain_name' ] = 's2.site1.local'
s2.config_values[ '{dns_search' ] = [ 's2.site1.local' ]
s2.config_values[ 'dns_servers' ] = [ '10.0.0.1' ]
s2.parent = s1
s2.full_clean()
s2.save()

print( 'creating networks...' )
addr1_block = AddressBlock( site=s1, subnet='192.168.200.0', gateway_offset=1, prefix=24 )
addr1_block.full_clean()
addr1_block.save()

addr2_block = AddressBlock( site=s2, subnet='169.254.0.0', gateway_offset=1, prefix=24 )
addr2_block.full_clean()
addr2_block.save()

addrlo_block = AddressBlock( site=s1, subnet='127.0.0.0', prefix=8 )
addrlo_block.full_clean()
addrlo_block.save()

for i in range( 2, 10 ):
  addr = ReservedAddress( address_block=addr1_block, offset=i, reason='switch reserved' )
  addr.full_clean()
  addr.save()

addr = ReservedAddress( address_block=addr1_block, offset=10, reason='resource server' )
addr.full_clean()
addr.save()

for i in range( 220, 225 ):
  addr = DynamicAddress( address_block=addr1_block, offset=i )
  addr.full_clean()
  addr.save()

print( 'creating local dev box and cluster...' )
fdn_dev = ManualFoundation( site=s1, blueprint=fbp_manual, locator='localdev' )
fdn_dev.full_clean()
fdn_dev.save()
fdn_dev.setBuilt()

iface = RealNetworkInterface( name='lo', is_provisioning=True )
iface.full_clean()
iface.save()

fni = FoundationNetworkInterface( foundation=fdn_dev, interface=iface, physical_location='lo' )
fni.full_clean()
fni.save()

str_dev = Structure( site=s1, blueprint=sbp_xenial, hostname='localdev', foundation=fdn_dev )
str_dev.auto_build = False
str_dev.full_clean()
str_dev.save()
str_dev.setBuilt()

addr = Address( networked=str_dev, address_block=addrlo_block, interface_name='lo', offset=1, is_primary=True )
addr.full_clean()
addr.save()

print( 'Making a complex' )
cpx = ManualComplex( site=s1, name='mnlcpx', description='manual complex', built_percentage=70 )
cpx.full_clean()
cpx.save()

for i in range( 1, 11 ):
  fdn = ManualFoundation( site=s1, blueprint=fbp_manual, locator='cpx{0}'.format( i ) )
  fdn.full_clean()
  fdn.save()

  iface = RealNetworkInterface( name='eth0', is_provisioning=True )
  iface.full_clean()
  iface.save()

  fni = FoundationNetworkInterface( foundation=fdn, interface=iface, physical_location='eth0' )
  fni.full_clean()
  fni.save()

  strct = Structure( site=s1, blueprint=sbp_manual, hostname='cpx{0}'.format( i ), foundation=fdn )
  strct.auto_build = True
  strct.full_clean()
  strct.save()

  addr = Address( networked=strct, address_block=addr1_block, interface_name='eth0', offset=20 + i, is_primary=True )
  addr.full_clean()
  addr.save()

  cpx_member = ComplexStructure( complex=cpx, structure=strct )
  cpx_member.full_clean()
  cpx_member.save()

print( 'Adding to Complex' )
for i in range( 1, 5 ):
  fdn = ManualComplexedFoundation( site=s1, blueprint=fbp_manual, locator='cpxmbr{0}'.format( i ), complex_host=cpx )
  fdn.full_clean()
  fdn.save()

  iface = RealNetworkInterface( name='eth0', is_provisioning=True )
  iface.full_clean()
  iface.save()

  fni = FoundationNetworkInterface( foundation=fdn, interface=iface, physical_location='eth0' )
  fni.full_clean()
  fni.save()

  strct = Structure( site=s1, blueprint=sbp_manual, hostname='cpxmbr{0}'.format( i ), foundation=fdn )
  strct.auto_build = True
  strct.full_clean()
  strct.save()

  addr = Address( networked=strct, address_block=addr1_block, interface_name='eth0', offset=100 + i, is_primary=True )
  addr.full_clean()
  addr.save()
